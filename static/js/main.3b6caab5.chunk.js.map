{"version":3,"sources":["client.js","utils/constants.js","config.js","resolvers.js","graphql/queries.js","components/user/User.js","graphql/mutations.js","components/navigation/cart/sellItem/DeleteItem.js","components/navigation/CreateItemModal.js","components/navigation/cart/sellItem/UpdateItem.js","components/navigation/cart/sellItem/SellItem.js","components/navigation/cart/sellItem/index.js","components/navigation/cart/sellItem/SellItemList.js","components/navigation/cart/cartItem/CartItem.js","utils/calcTotalPrice.js","components/navigation/cart/cartItem/TakeMyMoney.js","components/navigation/cart/cartItem/index.js","components/navigation/cart/cartItem/CartItemList.js","components/navigation/cart/orders/OrderDetailsModal.js","components/navigation/cart/orders/OrderItem.js","components/navigation/cart/orders/index.js","components/navigation/cart/orders/OrderList.js","components/navigation/cart/Slider.js","components/navigation/cart/CartItemsCount.js","components/navigation/cart/MyCart.js","components/navigation/LogInModal.js","components/navigation/NavBar.js","components/search/SearchField.js","components/navigation/SignUp.js","utils/formatMoney.js","components/item/ItemPreview.js","components/item/Item.js","components/item/ItemList.js","index.js"],"names":["tokenValue","localStorage","getItem","httpLink","HttpLink","uri","headers","Authorization","concat","cache","InMemoryCache","stateLink","withClientState","defaults","currentModal","__typename","activeModal","items","resolvers","Mutation","openModal","_","_ref","_ref2","data","writeData","closeModal","args","_ref3","link","ApolloLink","from","client","ApolloClient","gql","_templateObject","SEARCH_ITEMS_QUERY","_templateObject2","ALL_ITEMS_QUERY","_templateObject3","ME_QUERY","_templateObject4","USER_ORDERS_QUERY","_templateObject5","ITEM_QUERY","_templateObject6","User","props","react_default","a","createElement","react_apollo_browser_umd","query","loading","error","children","mutations_templateObject","mutations_templateObject2","mutations_templateObject3","CREATE_ITEM_MUTATION","mutations_templateObject4","UPDATE_ITEM_MUTATION","mutations_templateObject5","DELETE_ITEM_MUTATION","mutations_templateObject6","ADD_TO_CART_MUTATION","_templateObject7","REMOVE_FROM_CART_MUTATION","_templateObject8","CREATE_ORDER_MUTATION","_templateObject9","DeleteItem","id","mutation","variables","refetchQueries","Icon","className","icon","color","onClick","window","confirm","catch","err","alert","message","CreateItemModal","state","title","_this","description","image","largeImage","price","isShown","h","innerHeight","editMode","edit","handleChange","e","_e$target","target","name","type","value","val","parseFloat","setState","Object","defineProperty","_this2","this","_this$state","Fragment","Dialog","minHeightContent","hasFooter","hasHeader","onCloseComplete","onSubmit","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","preventDefault","sent","stop","_x","apply","arguments","src","FilePicker","width","marginBottom","TextInputField","label","placeholder","onChange","Button","Component","UpdateItem","item","navigation_CreateItemModal","assign","SellItem","Text","sellItem_UpdateItem","sellItem_DeleteItem","SellItemList","map","sellItem_SellItem","key","CartItem","cartItem","length","substr","trim","Pane","hoverElevation","quantity","calcTotalPrice","cart","reduce","tally","TakeMyMoney","onToken","res","createOrder","order","console","log","token","user_User","main_default","amount","me","stripeKey","currency","email","React","CartItemList","cartTotal","isCartItems","filter","cartItem_CartItem","Heading","cartItem_TakeMyMoney","height","appearance","intent","OrderDetailsModal","orderItem","orderDate","format","createdAt","es","initialState","total","OrderItem","orders_OrderDetailsModal","OrderList","orders","orders_OrderItem","withRouter","selectedIndex","tabs","SideSheet","containerProps","display","flex","flexDirection","zIndex","flexShrink","elevation","backgroundColor","padding","size","overflowY","background","Tablist","marginRight","tab","index","Tab","onSelect","removeItem","history","push","location","reload","isSelected","aria-controls","role","aria-labelledby","aria-hidden","sellItem","Spinner","marginX","cart_cartItem","cart_orders","Count","posed","span","enter","y","scale","exit","CartItemsCount","pose","setTimeout","count","Pill","marginLeft","isSolid","MyCart","cart_Slider","cart_CartItemsCount","LogInModal","isLoading","isConfirmLoading","margin","TextInput","SEND_TOKEN","onCompleted","success","paddingRight","t0","LogInModal_templateObject","NavBar","alignItems","cart_MyCart","navigation_LogInModal","SearchField","debounce","searchTerm","_x2","resetIdCounter","downshift_esm","itemToString","getInputProps","getItemProps","isOpen","highlightedIndex","inputValue","SearchInput","persist","style","top","left","right","SignUp","loader","signup","shortLivedToken","match","params","setItem","_this3","marginY","toaster","warning","duration","SIGN_UP","SignUp_templateObject","graphql","formatMoney","options","minimumFractionDigits","Intl","NumberFormat","ItemPreview","Item","item_ItemPreview","alt","ItemList","fetchMoreData","fetchMore","after","itemsConnection","pageInfo","endCursor","updateQuery","fetchMoreResult","edges","toConsumableArray","notifyOnNetworkStatusChange","fetchPolicy","onscroll","hasNextPage","document","documentElement","scrollTop","offsetHeight","item_Item","node","rootElement","getElementById","ReactDOM","render","BrowserRouter","navigation_NavBar","search_SearchField","Switch","Route","exact","path","component"],"mappings":"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","file":"static/js/main.3b6caab5.chunk.js","sourcesContent":["import { HttpLink, InMemoryCache, ApolloClient } from 'apollo-client-preset'\nimport { WebSocketLink } from 'apollo-link-ws'\nimport { ApolloLink, split } from 'apollo-link'\nimport { getMainDefinition } from 'apollo-utilities'\nimport { AUTH_TOKEN } from './utils/constants'\nimport { withClientState } from 'apollo-link-state'\nimport { resolvers, defaults } from './resolvers'\nimport { endpoint, prodEndpoint } from './config'\n\nconst tokenValue = localStorage.getItem(AUTH_TOKEN)\n\nconst httpLink = new HttpLink({\n  uri: process.env.NODE_ENV === 'development' ? endpoint : prodEndpoint,\n  headers: {\n    Authorization: tokenValue ? `Bearer ${tokenValue}` : '',\n  },\n})\n\nconst cache = new InMemoryCache()\nconst stateLink = withClientState({ cache, defaults, resolvers })\nconst link = ApolloLink.from([stateLink, httpLink])\n\nconst client = new ApolloClient({\n  link,\n  cache,\n  // connectToDevTools: true,\n})\n\nexport default client\n// git subtree push --prefix client heroku-frontend master\n\n// const middlewareLink = new ApolloLink((operation, forward) => {\n//   // get the authentication token from local storage if it exists\n//   const tokenValue = localStorage.getItem(AUTH_TOKEN)\n//   // console.log('the token', tokenValue)\n//   // return the headers to the context so httpLink can read them\n//   operation.setContext({\n//     headers: {\n//       Authorization: tokenValue ? `Bearer ${tokenValue}` : '',\n//     },\n//   })\n//   return forward(operation)\n// })\n\n// authenticated httplink\n// const httpLinkAuth = middlewareLink.concat(httpLink)\n\n// const wsLink = new WebSocketLink({\n//   uri:\n//     process.env.NODE_ENV === 'development'\n//       ? `ws://${endpoint}`\n//       : `ws://${prodEndpoint}`,\n//   options: {\n//     reconnect: true,\n//     // connectionParams: {\n//     //   Authorization: tokenValue ? `Bearer ${tokenValue}` : '',\n//     // },\n//   },\n// })\n\n// const link = split(\n//   // split based on operation type\n//   ({ query }) => {\n//     const { kind, operation } = getMainDefinition(query)\n//     return kind === 'OperationDefinition' && operation === 'subscription'\n//   },\n//   // wsLink,\n//   httpLinkAuth,\n// )\n// apollo client setup\n// const link = ApolloLink.from([httpLink]);\n\n// const resolvers = {\n// \tMutation: {\n// \t\topenModal: (_, { currentModal, orderItem }, { cache }) => {\n// \t\t\tconst data = {\n// \t\t\t\tactiveModal: {\n// \t\t\t\t\t__typename: 'ActiveModal',\n// \t\t\t\t\tcurrentModal,\n// \t\t\t\t\torderItem\n// \t\t\t\t}\n// \t\t\t}\n// \t\t\tcache.writeData({ data })\n// \t\t\t// console.log(currentModal)\n// \t\t},\n// \t\tcloseModal: (_, args, { cache }) => {\n// \t\t\tconst data = {\n// \t\t\t\tactiveModal: {\n// \t\t\t\t\t__typename: 'ActiveModal',\n// \t\t\t\t\tcurrentModal: null,\n// \t\t\t\t\torderItem: null\n// \t\t\t\t}\n// \t\t\t}\n// \t\t\tcache.writeData({ data })\n// \t\t}\n// \t}\n// }\n\n// const typeDefs = `\n//   type OrderItem {\n//     id: Int!\n//     quantity: Int!\n//   }\n//   type Mutation {\n//     // openModal(text: String!): OrderItem\n//     // closeModal(id: Int!): Todo\n//   }\n//   // type Query {\n//   //   visibilityFilter: String\n//   //   todos: [Todo]\n//   // }\n// `\n","export const AUTH_TOKEN = 'AUTH_TOKEN'\n","export const endpoint = `http://localhost:4000`\r\nexport const prodEndpoint = `https://ecomm-yoga-prod.herokuapp.com/`\r\n","import gql from 'graphql-tag'\n\nexport const defaults = {\n\tcurrentModal: {\n\t\t__typename: 'CurrentModal',\n\t\tactiveModal: null,\n\t\titems: []\n\t}\n}\n\nexport const resolvers = {\n\tMutation: {\n\t\topenModal: (_, { currentModal }, { cache }) => {\n\t\t\tconst data = {\n\t\t\t\tcurrentModal: {\n\t\t\t\t\t__typename: 'CurrentModal',\n\t\t\t\t\tactiveModal: currentModal.activeModal,\n\t\t\t\t\titems: currentModal.items\n\t\t\t\t}\n\t\t\t}\n\t\t\tcache.writeData({ data })\n\t\t\treturn null\n\t\t},\n\t\tcloseModal: (_, args, { cache }) => {\n\t\t\tconst data = {\n\t\t\t\tcurrentModal: {\n\t\t\t\t\t__typename: 'CurrentModal',\n\t\t\t\t\tactiveModal: null,\n\t\t\t\t\titems: []\n\t\t\t\t}\n\t\t\t}\n\t\t\tcache.writeData({ data })\n\t\t\treturn null\n\t\t}\n\t}\n}\n","import { gql } from 'apollo-boost'\n\nexport const GET_ACTIVE_MODAL = gql`\n  query GET_ACTIVE_MODAL {\n    currentModal @client {\n      activeModal\n      items\n    }\n  }\n`\n\nexport const SEARCH_ITEMS_QUERY = gql`\n  query SEARCH_ITEMS_QUERY($searchTerm: String!) {\n    items(\n      where: {\n        OR: [\n          { title_contains: $searchTerm }\n          { description_contains: $searchTerm }\n        ]\n      }\n    ) {\n      id\n      image\n      title\n    }\n  }\n`\n\nexport const ALL_ITEMS_QUERY = gql`\n  query ALL_ITEMS_QUERY($after: String) {\n    itemsConnection(after: $after, first: 9, orderBy: createdAt_ASC) {\n      edges {\n        node {\n          id\n          title\n          description\n          image\n          largeImage\n          price\n        }\n      }\n      pageInfo {\n        hasNextPage\n        endCursor\n      }\n    }\n  }\n`\nexport const ME_QUERY = gql`\n  query ME_QUERY {\n    me {\n      id\n      email\n      items {\n        id\n        title\n        description\n        image\n        price\n      }\n      cart {\n        quantity\n        id\n        item {\n          title\n          description\n          price\n          id\n          image\n        }\n      }\n    }\n  }\n`\n\nexport const USER_ORDERS_QUERY = gql`\n  query USER_ORDERS_QUERY {\n    orders(orderBy: createdAt_DESC) {\n      id\n      total\n      createdAt\n      items {\n        id\n        title\n        price\n        description\n        quantity\n        image\n      }\n    }\n  }\n`\nexport const ITEM_QUERY = gql`\n  query ITEM_QUERY($id: ID!) {\n    item(where: { id: $id }) {\n      id\n      title\n      description\n      largeImage\n      price\n    }\n  }\n`\n","import React, { Component, Fragment } from 'react'\nimport { Query } from 'react-apollo'\nimport { ME_QUERY } from '../../graphql/queries'\nimport { AUTH_TOKEN } from '../../utils/constants'\n\nconst User = props => (\n\t<Query query={ME_QUERY}>\n\t\t{({ data, loading, error }) => {\n\t\t\t// console.log('data', data)\n\t\t\treturn props.children({ data, loading })\n\t\t}}\n\t</Query>\n)\n\nexport default User\n","import { gql } from 'apollo-boost'\n\nexport const OPEN_MODAL_MUTATION = gql`\n  mutation OPEN_MODAL_MUTATION($currentModal: CurrentModal ) {\n    openModal(currentModal: $currentModal) @client \n  }\n`\n\nexport const CLOSE_MODAL_MUTATION = gql`\n  mutation CLOSE_MODAL_MUTATION {\n    closeModal @client \n  }\n`\nexport const LOGIN_USER_MUTATION = gql`\n  mutation LOGIN_USER_MUTATION($email: String!, $password: String!,$name: String!) {\n   \tcreateUser(data:{email:$email, name:$name, password:$password}){\n      id\n      name\n      posts{\n        id\n        isPublished\n        text\n        title\n        createdAt\n      }\n    }\n  }\n`\n\nexport const CREATE_ITEM_MUTATION = gql`\n  mutation CREATE_ITEM_MUTATION(\n    $title: String!\n    $description: String!\n    $price: Int!\n    $image: String\n    $largeImage: String\n  ) {\n    createItem(\n      title: $title\n      description: $description\n      price: $price\n      image: $image\n      largeImage: $largeImage\n    ) {\n      id\n    }\n  }\n`\nexport const UPDATE_ITEM_MUTATION = gql`\n  mutation UPDATE_ITEM_MUTATION(\n    $id: ID!\n    $title: String!\n    $description: String!\n    $price: Int!\n  ) {\n    updateItem(\n      id: $id\n      title: $title\n      description: $description\n      price: $price\n    ) {\n      id\n    }\n  }\n`\n\nexport const DELETE_ITEM_MUTATION = gql`\n  mutation DELETE_ITEM_MUTATION($id: ID!) {\n    deleteItem(id: $id) {\n      id\n    }\n  }\n`\n\nexport const ADD_TO_CART_MUTATION = gql`\n  mutation addToCart($id: ID!) {\n    addToCart(id: $id) {\n      id\n      quantity\n    }\n  }\n`\n\nexport const REMOVE_FROM_CART_MUTATION = gql`\n  mutation removeFromCart($id: ID!) {\n    removeFromCart(id: $id) {\n      id\n    }\n  }\n`\n\nexport const CREATE_ORDER_MUTATION = gql`\n  mutation createOrder($token: String!) {\n    createOrder(token: $token) {\n      id\n      charge\n      total\n      items {\n        id\n        title\n      }\n    }\n  }\n`\n","import React from 'react'\nimport Component from '@reactions/component'\nimport { Icon, Text, Tab, Heading, Tablist, Spinner, SideSheet } from 'evergreen-ui'\nimport { withRouter } from 'react-router-dom'\nimport User from '../../../user/User'\nimport { DELETE_ITEM_MUTATION, REMOVE_FROM_CART_MUTATION } from '../../../../graphql/mutations'\nimport { Mutation } from 'react-apollo'\nimport { ME_QUERY, ALL_ITEMS_QUERY } from '../../../../graphql/queries'\n\nconst DeleteItem = ({ id }) => (\n\t<Mutation\n\t\tmutation={DELETE_ITEM_MUTATION}\n\t\tvariables={{ id }}\n\t\trefetchQueries={[{ query: ME_QUERY }, { query: ALL_ITEMS_QUERY }]}\n\n\t\t// update={this.update}\n\t>\n\t\t{(mutation, { error }) => (\n\t\t\t<Icon\n\t\t\t\tclassName=\"pointer grow\"\n\t\t\t\ticon=\"delete\"\n\t\t\t\tcolor=\"danger\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tif (window.confirm('Are you sure you want to delete this item?')) {\n\t\t\t\t\t\tmutation().catch(err => {\n\t\t\t\t\t\t\talert(err.message)\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t/>\n\t\t)}\n\t</Mutation>\n)\n\nexport default DeleteItem\n","import React from 'react'\nimport Component from '@reactions/component'\nimport {\n  FilePicker,\n  Dialog,\n  Pane,\n  Text,\n  Button,\n  Icon,\n  Spinner,\n  TextInputField,\n} from 'evergreen-ui'\nimport { Mutation } from 'react-apollo'\nimport {\n  CREATE_ITEM_MUTATION,\n  UPDATE_ITEM_MUTATION,\n} from '../../graphql/mutations'\nimport { ALL_ITEMS_QUERY, ME_QUERY } from '../../graphql/queries'\n\nclass CreateItemModal extends Component {\n  state = {\n    title: this.props.title || '',\n    description: this.props.description || '',\n    image: this.props.image || 'https://via.placeholder.com/250x250',\n    largeImage: this.props.largeImage || 'https://via.placeholder.com/550x350',\n    price: this.props.price || 100,\n    isShown: false,\n    h: window.innerHeight,\n    editMode: this.props.edit || false,\n  }\n  handleChange = e => {\n    const { name, type, value } = e.target\n    const val = type === 'number' ? parseFloat(value) : value\n    this.setState({ [name]: val })\n  }\n\n  // uploadFile = async e => {\n  // \tconst files = e.target.files\n  // \tconst data = new FormData()\n  // \tdata.append('file', files[0])\n  // \tdata.append('upload_preset', 'sickfits')\n\n  // \tconst res = await fetch('https://api.cloudinary.com/v1_1/wesbostutorial/image/upload', {\n  // \t\tmethod: 'POST',\n  // \t\tbody: data\n  // \t})\n  // \tconst file = await res.json()\n  // \tthis.setState({\n  // \t\timage: file.secure_url,\n  // \t\tlargeImage: file.eager[0].secure_url\n  // \t})\n  // }\n  render() {\n    // console.log('SellItem', this.props)\n    const {\n      title,\n      description,\n      image,\n      price,\n      largeImage,\n      editMode,\n    } = this.state\n    const variables = editMode\n      ? { id: this.props.id, title, description, price }\n      : { title, description, image, price, largeImage }\n    return (\n      <Mutation\n        mutation={!editMode ? CREATE_ITEM_MUTATION : UPDATE_ITEM_MUTATION}\n        variables={variables}\n        refetchQueries={[{ query: ALL_ITEMS_QUERY }, { query: ME_QUERY }]}\n      >\n        {(mutation, { loading, error }) => (\n          <>\n            <Dialog\n              minHeightContent={100}\n              hasFooter={false}\n              hasHeader={false}\n              isShown={this.state.isShown}\n              onCloseComplete={() => this.setState({ isShown: false })}\n            >\n              <form\n                onSubmit={async e => {\n                  // Stop the form from submitting\n                  e.preventDefault()\n                  // call the mutation\n                  const res = await mutation()\n                  // change them to the single item page\n                  this.setState({ isShown: false })\n                }}\n                className=\"flex justify-between\"\n              >\n                <div className=\"w-45\">\n                  <img\n                    src=\"https://via.placeholder.com/250x295\"\n                    // style={{ height: 'auto', width: 'auto' }}\n                  />\n                </div>\n                <div className=\"w-50\">\n                  {!editMode && <FilePicker width=\"100%\" marginBottom={16} />}\n                  <TextInputField\n                    label=\"Title\"\n                    width=\"100%\"\n                    name=\"title\"\n                    placeholder=\"title\"\n                    marginBottom={16}\n                    value={this.state.title}\n                    onChange={this.handleChange}\n                  />\n                  <TextInputField\n                    label=\"Description\"\n                    width=\"100%\"\n                    name=\"description\"\n                    placeholder=\"description\"\n                    marginBottom={16}\n                    value={this.state.description}\n                    onChange={this.handleChange}\n                  />\n                  <TextInputField\n                    label=\"Price\"\n                    width=\"100%\"\n                    type=\"number\"\n                    name=\"price\"\n                    placeholder=\"price\"\n                    marginBottom={16}\n                    value={this.state.price}\n                    onChange={this.handleChange}\n                  />\n                  <Button width=\"100%\" type=\"submit\">\n                    Submit\n                  </Button>\n                </div>\n              </form>\n            </Dialog>\n            {this.props.children({\n              openModal: () => this.setState({ isShown: true }),\n            })}\n          </>\n        )}\n      </Mutation>\n    )\n  }\n}\n\nexport default CreateItemModal\n\n// <Form\n// \tdata-test=\"form\"\n// onSubmit={async e => {\n// \t// Stop the form from submitting\n// \te.preventDefault()\n// \t// call the mutation\n// \tconst res = await createItem()\n// \t// change them to the single item page\n// \tconsole.log(res)\n// \t// Router.push({\n// \t//   pathname: '/item',\n// \t//   query: { id: res.data.createItem.id },\n// \t// });\n// }}\n// >\n// \t<fieldset disabled={loading} aria-busy={loading}>\n// \t\t<label htmlFor=\"file\">\n// \t\t\tImage\n// \t\t\t<input\n// \t\t\t\ttype=\"file\"\n// \t\t\t\tid=\"file\"\n// \t\t\t\tname=\"file\"\n// \t\t\t\tplaceholder=\"Upload an image\"\n// \t\t\t\trequired\n// \t\t\t\tonChange={this.uploadFile}\n// \t\t\t/>\n// \t\t\t{this.state.image && (\n// \t\t\t\t<img width=\"200\" src={this.state.image} alt=\"Upload Preview\" />\n// \t\t\t)}\n// \t\t</label>\n\n// \t\t<label htmlFor=\"title\">\n// \t\t\tTitle\n// \t\t\t<input\n// \t\t\t\ttype=\"text\"\n// \t\t\t\tid=\"title\"\n// \t\t\t\tname=\"title\"\n// \t\t\t\tplaceholder=\"Title\"\n// \t\t\t\trequired\n// value={this.state.title}\n// onChange={this.handleChange}\n// \t\t\t/>\n// \t\t</label>\n\n// \t\t<label htmlFor=\"price\">\n// \t\t\tPrice\n// \t\t\t<input\n// \t\t\t\ttype=\"number\"\n// \t\t\t\tid=\"price\"\n// \t\t\t\tname=\"price\"\n// \t\t\t\tplaceholder=\"Price\"\n// \t\t\t\trequired\n// \t\t\t\tvalue={this.state.price}\n// \t\t\t\tonChange={this.handleChange}\n// \t\t\t/>\n// \t\t</label>\n\n// \t\t<label htmlFor=\"description\">\n// \t\t\tDescription\n// \t\t\t<textarea\n// \t\t\t\tid=\"description\"\n// \t\t\t\tname=\"description\"\n// \t\t\t\tplaceholder=\"Enter A Description\"\n// \t\t\t\trequired\n// \t\t\t\tvalue={this.state.description}\n// \t\t\t\tonChange={this.handleChange}\n// \t\t\t/>\n// \t\t</label>\n// \t\t<button type=\"submit\">Submit</button>\n// \t</fieldset>\n// </Form>\n","import React from 'react'\nimport Component from '@reactions/component'\nimport { Icon, Text, Tab, Heading, Tablist, Spinner, SideSheet } from 'evergreen-ui'\nimport { withRouter } from 'react-router-dom'\nimport User from '../../../user/User'\nimport { UPDATE_ITEM_MUTATION, REMOVE_FROM_CART_MUTATION } from '../../../../graphql/mutations'\nimport { Mutation } from 'react-apollo'\nimport { ME_QUERY, ALL_ITEMS_QUERY } from '../../../../graphql/queries'\nimport CreateItemModal from '../../CreateItemModal'\n\nconst UpdateItem = ({ item }) => {\n\t// console.log('itemfromUpdateItem', { ...item })\n\treturn (\n\t\t<CreateItemModal {...item} edit={true}>\n\t\t\t{({ openModal }) => (\n\t\t\t\t<Icon className=\"pointer grow mr3\" icon=\"edit\" color=\"danger\" onClick={openModal} />\n\t\t\t)}\n\t\t</CreateItemModal>\n\t)\n}\nexport default UpdateItem\n","import React from 'react'\nimport Component from '@reactions/component'\nimport { Icon, Text, Tab, Heading, Tablist, Spinner, SideSheet } from 'evergreen-ui'\nimport { withRouter } from 'react-router-dom'\nimport User from '../../../user/User'\nimport { DELETE_ITEM_MUTATION, REMOVE_FROM_CART_MUTATION } from '../../../../graphql/mutations'\nimport { Mutation } from 'react-apollo'\nimport { ME_QUERY, ALL_ITEMS_QUERY } from '../../../../graphql/queries'\nimport DeleteItem from './DeleteItem'\nimport UpdateItem from './UpdateItem'\n\nconst SellItem = ({ item }) => (\n\t<div className=\"pa3 flex items-center justify-between bb b--light-gray w-100\">\n\t\t<Text className=\"w-70\">{item.title}</Text>\n\t\t<div className=\"flex flex-nowrap flex-end\">\n\t\t\t<UpdateItem item={item} />\n\t\t\t<DeleteItem id={item.id} />\n\t\t</div>\n\t</div>\n)\n\nexport default SellItem\n","import SellItemList from './SellItemList'\nexport default SellItemList\n","import React from 'react'\nimport Component from '@reactions/component'\nimport { Icon, Pane, Tab, Heading, Tablist, Spinner, SideSheet } from 'evergreen-ui'\nimport { withRouter } from 'react-router-dom'\nimport User from '../../../user/User'\n// import { DELETE_ITEM_MUTATION, REMOVE_FROM_CART_MUTATION } from '../../../graphql/mutations'\nimport { Mutation } from 'react-apollo'\nimport SellItem from './SellItem'\n\nconst SellItemList = ({ items }) => (\n\t<div className=\"flex flex-column w-100\">\n\t\t{items.map(item => <SellItem key={item.id} item={item} />)}\n\t</div>\n)\n\nexport default SellItemList\n","import React from 'react'\nimport Component from '@reactions/component'\nimport { Icon, Pane, Text, Heading, Tablist, Spinner, SideSheet } from 'evergreen-ui'\nimport { withRouter } from 'react-router-dom'\nimport User from '../../../user/User'\nimport { ME_QUERY } from '../../../../graphql/queries'\nimport { DELETE_ITEM_MUTATION, REMOVE_FROM_CART_MUTATION } from '../../../../graphql/mutations'\nimport { Mutation } from 'react-apollo'\nconst CartItem = ({ cartItem }) => {\n\t// console.log(cartItem)\n\tconst title =\n\t\tcartItem.item.title.length > 27\n\t\t\t? `${cartItem.item.title.substr(0, 27).trim()}...`\n\t\t\t: cartItem.item.title\n\treturn (\n\t\t<Pane\n\t\t\thoverElevation={3}\n\t\t\tclassName=\"pl1 pr2 flex items-center justify-between bb b--light-gray w-100\"\n\t\t>\n\t\t\t<div className=\"flex items-center pv2 w-100\">\n\t\t\t\t<img className=\"w4\" src={cartItem.item.image} />\n\t\t\t\t<div className=\"flex items-center flex-column w-100\">\n\t\t\t\t\t<div className=\"w-100 flex justify-between mt4\">\n\t\t\t\t\t\t<Text className=\"pl3 w-60\">{title}</Text>\n\t\t\t\t\t\t<Text className=\"pl2 flex self-end\">\n\t\t\t\t\t\t\t<span>{cartItem.quantity} x</span>\n\t\t\t\t\t\t\t<span className=\"pl1\">${cartItem.item.price}</span>\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<Mutation\n\t\t\t\t\t\tmutation={REMOVE_FROM_CART_MUTATION}\n\t\t\t\t\t\tvariables={{ id: cartItem.id }}\n\t\t\t\t\t\trefetchQueries={[{ query: ME_QUERY }]}\n\t\t\t\t\t>\n\t\t\t\t\t\t{(mutation, { error }) => (\n\t\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\t\tclassName=\"pointer grow mt4\"\n\t\t\t\t\t\t\t\ticon=\"cross\"\n\t\t\t\t\t\t\t\tcolor=\"gray\"\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tif (window.confirm('Are you sure you want to remove this item?')) {\n\t\t\t\t\t\t\t\t\t\tmutation().catch(err => {\n\t\t\t\t\t\t\t\t\t\t\talert(err.message)\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Mutation>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Pane>\n\t)\n}\n\nexport default CartItem\n","export default function calcTotalPrice(cart) {\n\treturn cart.reduce((tally, cartItem) => {\n\t\tif (!cartItem.item) return tally\n\t\treturn tally + cartItem.quantity * cartItem.item.price\n\t}, 0)\n}\n","import React from 'react'\nimport StripeCheckout from 'react-stripe-checkout'\nimport { Mutation } from 'react-apollo'\nimport calcTotalPrice from '../../../../utils/calcTotalPrice'\nimport { ME_QUERY } from '../../../../graphql/queries'\nimport { CREATE_ORDER_MUTATION } from '../../../../graphql/mutations'\nimport User from '../../../user/User'\nimport { USER_ORDERS_QUERY } from '../../../../graphql/queries'\n\nfunction totalItems(cart) {\n\treturn cart.reduce((tally, cartItem) => tally + cartItem.quantity, 0)\n}\n\nclass TakeMyMoney extends React.Component {\n\tonToken = async (res, createOrder) => {\n\t\tconsole.log(res)\n\t\t// NProgress.start()\n\t\t// manually call the mutation once we have the stripe token\n\t\tconst order = await createOrder({\n\t\t\tvariables: {\n\t\t\t\ttoken: res.id\n\t\t\t}\n\t\t}).catch(err => {\n\t\t\talert(err.message)\n\t\t})\n\t\tconsole.log(order)\n\t\t// Router.push({\n\t\t// \tpathname: '/order',\n\t\t// \tquery: { id: order.data.createOrder.id }\n\t\t// })\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<User>\n\t\t\t\t{({ data, loading }) => {\n\t\t\t\t\tif (loading) return null\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Mutation\n\t\t\t\t\t\t\tmutation={CREATE_ORDER_MUTATION}\n\t\t\t\t\t\t\trefetchQueries={[{ query: ME_QUERY }, { query: USER_ORDERS_QUERY }]}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{createOrder => (\n\t\t\t\t\t\t\t\t<StripeCheckout\n\t\t\t\t\t\t\t\t\tamount={calcTotalPrice(data.me.cart)}\n\t\t\t\t\t\t\t\t\tname=\"Sick Fits\"\n\t\t\t\t\t\t\t\t\tdescription={`Order of ${totalItems(data.me.cart)} items!`}\n\t\t\t\t\t\t\t\t\timage={data.me.cart.length && data.me.cart[0].item && data.me.cart[0].item.image}\n\t\t\t\t\t\t\t\t\tstripeKey=\"pk_test_5EipLhHukdqp7BL09LrPg6J7\"\n\t\t\t\t\t\t\t\t\tcurrency=\"USD\"\n\t\t\t\t\t\t\t\t\temail={data.me.email}\n\t\t\t\t\t\t\t\t\ttoken={res => this.onToken(res, createOrder)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{this.props.children}\n\t\t\t\t\t\t\t\t</StripeCheckout>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Mutation>\n\t\t\t\t\t)\n\t\t\t\t}}\n\t\t\t</User>\n\t\t)\n\t}\n}\n\nexport default TakeMyMoney\n","import CartItemList from './CartItemList'\nexport default CartItemList\n","import React from 'react'\nimport Component from '@reactions/component'\nimport { Button, Pane, Tab, Heading, Tablist, Spinner, SideSheet } from 'evergreen-ui'\nimport { withRouter } from 'react-router-dom'\nimport User from '../../../user/User'\nimport { Mutation } from 'react-apollo'\nimport CartItem from './CartItem'\nimport TakeMyMoney from './TakeMyMoney'\nimport calcTotalPrice from '../../../../utils/calcTotalPrice'\n\nconst CartItemList = ({ cart }) => {\n\tconst cartTotal = calcTotalPrice(cart)\n\tconst isCartItems = cart.filter(cartItem => cartItem.item !== null)[0]\n\t// console.log('isCartItems', isCartItems)\n\treturn (\n\t\t<div className=\"flex flex-column justify-between w-100\">\n\t\t\t<>\n\t\t\t\t{cart.map(cartItem => cartItem.item && <CartItem key={cartItem.id} cartItem={cartItem} />)}\n\t\t\t</>\n\t\t\t{isCartItems ? (\n\t\t\t\t<>\n\t\t\t\t\t<Heading className=\"pl3 pv3\">Cart total: ${cartTotal}</Heading>\n\t\t\t\t\t<TakeMyMoney>\n\t\t\t\t\t\t<div className=\"flex justify-center\">\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tclassName=\"mt4 flex justify-center\"\n\t\t\t\t\t\t\t\twidth=\"50%\"\n\t\t\t\t\t\t\t\theight={40}\n\t\t\t\t\t\t\t\tappearance=\"primary\"\n\t\t\t\t\t\t\t\tintent=\"success\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tCheckout\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</TakeMyMoney>\n\t\t\t\t</>\n\t\t\t) : (\n\t\t\t\t<Heading className=\"flex justify-center mt4\">There is nothing in your cart</Heading>\n\t\t\t)}\n\t\t</div>\n\t)\n}\n\nexport default CartItemList\n","import React from 'react'\nimport Component from '@reactions/component'\nimport { Dialog, Pane, Tab, Heading, Tablist, Spinner, Text } from 'evergreen-ui'\nimport { withRouter } from 'react-router-dom'\nimport User from '../../../user/User'\nimport { ME_QUERY } from '../../../../graphql/queries'\nimport { Query } from 'react-apollo'\nimport { GET_ACTIVE_MODAL } from '../../../../graphql/queries'\nimport ModalWrapper from '../../../modal/ModalWrapper'\nimport { format } from 'date-fns'\n\nconst OrderDetailsModal = ({ children, orderItem }) => {\n\tconst orderDate = format(orderItem.createdAt, 'MM/DD/YYYY')\n\treturn (\n\t\t<Component initialState={{ isShown: false }}>\n\t\t\t{({ state, setState }) => (\n\t\t\t\t<Pane>\n\t\t\t\t\t<Dialog\n\t\t\t\t\t\tisShown={state.isShown}\n\t\t\t\t\t\tonCloseComplete={() => setState({ isShown: false })}\n\t\t\t\t\t\thasFooter={false}\n\t\t\t\t\t\thasHeader={false}\n\t\t\t\t\t>\n\t\t\t\t\t\t<div className=\"flex flex-column w-100 mb2\">\n\t\t\t\t\t\t\t<Heading>Order date: {orderDate}</Heading>\n\t\t\t\t\t\t\t<Text>Total: ${orderItem.total}</Text>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t{orderItem.items.map(item => (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tkey={item.id}\n\t\t\t\t\t\t\t\tclassName=\"flex items-center w-100 justify-between pv3 bb b--light-gray\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<img src={item.image} className=\"w4\" />\n\t\t\t\t\t\t\t\t<Text>{item.title}</Text>\n\t\t\t\t\t\t\t\t<Text>\n\t\t\t\t\t\t\t\t\t{item.quantity} x {item.price}\n\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Dialog>\n\t\t\t\t\t{children({ setState })}\n\t\t\t\t</Pane>\n\t\t\t)}\n\t\t</Component>\n\t)\n}\n// <Button onClick={() => setState({ isShown: true })}>Show Dialog</Button>\n\nexport default OrderDetailsModal\n\n// < Query query = { GET_ACTIVE_MODAL } >\n//   {({ data: { activeModal } }) => {\n// console.log(activeModal)\n// return (\n\n// < Component initialState = {{ isShown: false }}>\n// \t{({ state, setState }) => (\n// \t\t<Pane>\n// \t\t\t<Dialog\n// \t\t\t\tisShown={state.isShown}\n// \t\t\t\tonCloseComplete={() => setState({ isShown: false })}\n// \t\t\t\thasFooter={false}\n// \t\t\t\thasHeader={false}\n// \t\t\t>\n// \t\t\t\t<Text>{orderItem.createdAt}</Text>\n// \t\t\t</Dialog>\n// \t\t\t{children({ setState })}\n// \t\t</Pane>\n// \t)}\n// </Component >\n\n// \t< Query query = { GET_ACTIVE_MODAL } >\n// \t\t{({ data: { currentModal }, loading }) => {\n// \tif (loading) return null\n// \tconsole.log('activeModal from OrderDetailsModal', currentModal)\n// \treturn (\n// \t\t<ModalWrapper>\n// \t\t\t<div className=\"flex flex-column\">\n// \t\t\t\t{currentModal.items.map(item => <Text>{item.id}</Text>)}\n// \t\t\t</div>\n// \t\t</ModalWrapper>\n// \t)\n// }}\n// \t\t</Query >\n","import React from 'react'\nimport Component from '@reactions/component'\nimport { Text, Icon, Tab, Heading, Tablist, Spinner, SideSheet } from 'evergreen-ui'\nimport { withRouter } from 'react-router-dom'\nimport User from '../../../user/User'\nimport { ME_QUERY } from '../../../../graphql/queries'\nimport { Mutation } from 'react-apollo'\nimport { OPEN_MODAL_MUTATION } from '../../../../graphql/mutations'\nimport OrderDetailsModal from './OrderDetailsModal'\nimport { format } from 'date-fns'\n\nconst OrderItem = ({ orderItem }) => {\n\t// console.log('orderItem', orderItem)\n\treturn (\n\t\t<OrderDetailsModal orderItem={orderItem}>\n\t\t\t{({ setState }) => (\n\t\t\t\t<div\n\t\t\t\t\tonClick={() => setState({ isShown: true })}\n\t\t\t\t\tclassName=\"pointer mt3 grow flex justify-center\"\n\t\t\t\t>\n\t\t\t\t\t<Text className=\"pb2\"> {format(orderItem.createdAt, 'MM/DD/YYYY')}</Text>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</OrderDetailsModal>\n\t)\n}\n\nexport default OrderItem\n// onClick = {() => setState({ isShown: true })}\n// \t< Mutation\n// mutation = { OPEN_MODAL_MUTATION }\n// variables = {{\n// \tcurrentModal: 'OrderDetailsModal',\n// \t\torderItem\n// }}\n// \t\t\t>\n// \t{(mutation, { loading }) => (\n\n// < OrderDetailsModal orderItem = { orderItem } >\n// \t{({ setState }) => (\n// \t\t<div onClick={() => setState({ isShown: true })} className=\"shadow-3 ph3 mh3 mt2 bg-white\">\n// \t\t\t{orderItem.createdAt}\n// \t\t</div>\n// \t)}\n// </OrderDetailsModal >\n\n// \t< Mutation\n// mutation = { OPEN_MODAL_MUTATION }\n// variables = {{\n// \tcurrentModal: { activeModal: 'OrderDetailsModal', ...orderItem }\n// }}\n// \t\t>\n// \t{(mutate, { loading }) => <div onClick={mutate}>{orderItem.createdAt}</div>}\n// \t\t</Mutation >\n","import OrderList from './OrderList'\n\nexport default OrderList\n","import React from 'react'\nimport Component from '@reactions/component'\nimport { Button, Pane, Tab, Heading, Tablist, Spinner, SideSheet } from 'evergreen-ui'\nimport { withRouter } from 'react-router-dom'\nimport OrderItem from './OrderItem'\nimport { Query, Mutation } from 'react-apollo'\nimport { OPEN_MODAL_MUTATION } from '../../../../graphql/mutations'\nimport { USER_ORDERS_QUERY } from '../../../../graphql/queries'\n\nconst OrderList = () => (\n\t<Query query={USER_ORDERS_QUERY}>\n\t\t{({ data: { orders }, loading }) => {\n\t\t\tif (loading) return null\n\t\t\treturn (\n\t\t\t\t<div>{orders.map(orderItem => <OrderItem key={orderItem.id} orderItem={orderItem} />)}</div>\n\t\t\t)\n\t\t}}\n\t</Query>\n)\n\nexport default OrderList\n","import React from 'react'\nimport Component from '@reactions/component'\nimport {\n  Icon,\n  Pane,\n  Tab,\n  Heading,\n  Tablist,\n  Spinner,\n  SideSheet,\n} from 'evergreen-ui'\nimport { withRouter } from 'react-router-dom'\nimport User from '../../user/User'\nimport {\n  DELETE_ITEM_MUTATION,\n  REMOVE_FROM_CART_MUTATION,\n} from '../../../graphql/mutations'\nimport { Mutation } from 'react-apollo'\nimport SellItemList from './sellItem'\nimport CartItemList from './cartItem'\nimport OrderList from './orders'\n\nconst Slider = props => (\n  <User>\n    {({ data, loading }) => (\n      <Component\n        initialState={{\n          isShown: false,\n          selectedIndex: 0,\n          tabs: ['Cart', 'Orders', 'Sell', 'Log out'],\n        }}\n      >\n        {({ state, setState }) => (\n          <>\n            <SideSheet\n              width={370}\n              isShown={state.isShown}\n              onCloseComplete={() => setState({ isShown: false })}\n              containerProps={{\n                display: 'flex',\n                flex: '1',\n                flexDirection: 'column',\n              }}\n            >\n              <Pane\n                zIndex={1}\n                flexShrink={0}\n                elevation={0}\n                backgroundColor=\"white\"\n              >\n                <Pane padding={16}>\n                  <Heading size={600}>{data.me.email}</Heading>\n                </Pane>\n              </Pane>\n              <Pane flex=\"1\" overflowY=\"scroll\" background=\"tint1\" padding={16}>\n                <Pane display=\"flex\" padding={8}>\n                  <Tablist display=\"flex\" flex=\"1\" marginRight={24}>\n                    {state.tabs.map((tab, index) => (\n                      <Tab\n                        // style={{ alignSelf: 'flex-end' }}\n                        key={tab}\n                        id={tab}\n                        onSelect={() => {\n                          setState({ selectedIndex: index })\n                          if (tab === 'Log out') {\n                            localStorage.removeItem('AUTH_TOKEN')\n                            props.history.push('/')\n                            window.location.reload()\n                          }\n                        }}\n                        isSelected={index === state.selectedIndex}\n                        aria-controls={`panel-${tab}`}\n                      >\n                        {tab}\n                      </Tab>\n                    ))}\n                  </Tablist>\n                </Pane>\n\n                {state.tabs.map((tab, index) => (\n                  <Pane\n                    width=\"100%\"\n                    key={tab}\n                    id={`panel-${tab}`}\n                    role=\"tabpanel\"\n                    aria-labelledby={tab}\n                    aria-hidden={index !== state.selectedIndex}\n                    display={index === state.selectedIndex ? 'block' : 'none'}\n                  >\n                    {tab === 'Sell' ? (\n                      <SellItemList items={data.me.items} />\n                    ) : (\n                      loading && <Spinner marginX=\"auto\" size={60} />\n                    )}\n                    {tab === 'Cart' ? (\n                      <CartItemList cart={data.me.cart} />\n                    ) : (\n                      loading && <Spinner marginX=\"auto\" size={60} />\n                    )}\n                    {tab === 'Orders' ? (\n                      <OrderList />\n                    ) : (\n                      loading && <Spinner marginX=\"auto\" size={60} />\n                    )}\n                  </Pane>\n                ))}\n              </Pane>\n            </SideSheet>\n            {props.children({ setState })}\n          </>\n        )}\n      </Component>\n    )}\n  </User>\n)\n\n//\t< Paragraph > Content of { tab }</Paragraph >\n//\nexport default withRouter(Slider)\n\n// <Button onClick={() => setState({ isShown: true })}>Show Basic Side Sheet</Button>\n\n// < Pane height = { 120} >\n// <Tablist marginBottom={16} flexBasis={240} marginRight={24}>\n// \t{state.tabs.map((tab, index) => (\n// \t\t<Tab\n// \t\t\tkey={tab}\n// \t\t\tid={tab}\n// \t\t\tonSelect={() => setState({ selectedIndex: index })}\n// \t\t\tisSelected={index === state.selectedIndex}\n// \t\t\taria-controls={`panel-${tab}`}\n// \t\t>\n// \t\t\t{tab}\n// \t\t</Tab>\n// \t))}\n// </Tablist>\n// <Pane padding={16} background=\"tint1\" flex=\"1\">\n// \t{state.tabs.map((tab, index) => (\n// \t\t<Pane\n// \t\t\tkey={tab}\n// \t\t\tid={`panel-${tab}`}\n// \t\t\trole=\"tabpanel\"\n// \t\t\taria-labelledby={tab}\n// \t\t\taria-hidden={index !== state.selectedIndex}\n// \t\t\tdisplay={index === state.selectedIndex ? 'block' : 'none'}\n// \t\t>\n// \t\t\t<Paragraph>Panel {tab}</Paragraph>\n// \t\t</Pane>\n// \t))}\n// </Pane>\n//   </Pane >\n","import React, { Component } from 'react'\nimport { Button, Pane, Text, Heading, Pill, Spinner, Popover } from 'evergreen-ui'\nimport posed, { PoseGroup, tween } from 'react-pose'\n// import User from '../../user/User'\n\n// const Panel = posed.div({\n//   fullscreen: {\n//     width: '100vw',\n//     height: '100vh',\n//     transition: tween,\n//     flip: true\n//   },\n//   thumbnail: {\n//     width: 100,\n//     height: 100,\n//     transition: tween,\n//     flip: true\n//   }\n// });\n\nconst Count = posed.span({\n\tenter: {\n\t\ty: -15,\n\t\tscale: 1.2\n\t\t// transition: tween,\n\t\t// flip: true\n\t\t// transform: rotateX(0.5),\n\t\t// transition: { duration: 100,  }\n\n\t\t// delay: 300\n\t\t// transition: {\n\t\t// \ty: { type: 'spring', stiffness: 1000, damping: 15 },\n\t\t// \tdefault: { duration: 300 }\n\t\t// }\n\t},\n\texit: {\n\t\ty: 0,\n\t\tscale: 1\n\t\t// transition: tween,\n\t\t// flip: true\n\t\t// transition: { duration: 500 }\n\t}\n})\n\nclass CartItemsCount extends Component {\n\tstate = {\n\t\tpose: 'exit'\n\t}\n\tcomponentWillReceiveProps(prev, next) {\n\t\tthis.setState({\n\t\t\tpose: 'enter'\n\t\t})\n\t\tsetTimeout(() => {\n\t\t\tthis.setState({\n\t\t\t\tpose: 'exit'\n\t\t\t})\n\t\t}, 90)\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<Count pose={this.state.pose} key={this.props.count}>\n\t\t\t\t<Pill display=\"inline-flex\" marginLeft={8} backgroundColor=\"#D9822B\" isSolid>\n\t\t\t\t\t{this.props.count ? this.props.count : 0}\n\t\t\t\t</Pill>\n\t\t\t</Count>\n\t\t)\n\t}\n}\n\nexport default CartItemsCount\n","import React from 'react'\nimport Component from '@reactions/component'\nimport { Button, Pane, Text, Heading, Pill, Spinner, Popover } from 'evergreen-ui'\nimport Slider from './Slider'\nimport CartItemsCount from './CartItemsCount'\nimport User from '../../user/User'\n\nconst MyCart = props => (\n\t<Slider>\n\t\t{({ setState }) => (\n\t\t\t<Button\n\t\t\t\tonClick={() => setState({ isShown: true })}\n\t\t\t\tcolor=\"#F9F9FB\"\n\t\t\t\tclassName=\"grow\"\n\t\t\t\tappearance=\"minimal\"\n\t\t\t\tmarginRight={16}\n\t\t\t>\n\t\t\t\tCart\n\t\t\t\t<User>\n\t\t\t\t\t{({ data, loading }) => {\n\t\t\t\t\t\tif (loading) return <Spinner marginX=\"auto\" size={16} />\n\t\t\t\t\t\tconst count = data.me.cart.reduce((prev, next) => next.item && prev + next.quantity, 0)\n\t\t\t\t\t\treturn <CartItemsCount count={count} />\n\t\t\t\t\t}}\n\t\t\t\t</User>\n\t\t\t</Button>\n\t\t)}\n\t</Slider>\n)\n\nexport default MyCart\n","import React from 'react'\nimport Component from '@reactions/component'\nimport {\n  Button,\n  Pane,\n  Text,\n  Heading,\n  TextInput,\n  Icon,\n  Dialog,\n} from 'evergreen-ui'\nimport { Mutation, Query } from 'react-apollo'\nimport { gql } from 'apollo-boost'\n// import { ME_QUERY } from '../../../../graphql/queries'\n\nconst LogInModal = ({ children }) => (\n  <Component\n    initialState={{\n      isShown: false,\n      isLoading: false,\n      email: '',\n      message: null,\n    }}\n  >\n    {({ state, setState }) => (\n      <Pane>\n        <Dialog\n          isShown={state.isShown}\n          onCloseComplete={() =>\n            setState({\n              isShown: false,\n              isLoading: false,\n              email: '',\n              message: '',\n            })\n          }\n          isConfirmLoading={state.isLoading}\n          hasFooter={false}\n          hasHeader={false}\n        >\n          <div className=\"flex flex-column items-center\">\n            <Heading size={600} margin={24}>\n              Your email please\n            </Heading>\n            <TextInput\n              onChange={e => setState({ email: e.target.value })}\n              name=\"email\"\n              placeholder=\"email\"\n            />\n            <Mutation\n              mutation={SEND_TOKEN}\n              variables={{ email: state.email }}\n              onCompleted={() =>\n                setState({\n                  isLoading: false,\n                  message: 'Please check your Inbox!',\n                  success: true,\n                })\n              }\n            >\n              {(mutation, { loading, error }) =>\n                !state.success ? (\n                  <Button\n                    height={40}\n                    className=\"br-pill mt4 mb3\"\n                    isLoading={state.isLoading}\n                    onClick={async () => {\n                      try {\n                        setState({ isLoading: true })\n                        await mutation()\n                      } catch (e) {\n                        console.log(error)\n                      }\n                    }}\n                  >\n                    Submit\n                  </Button>\n                ) : (\n                  <div className=\"flex items-center justify-center mt4 mb3\">\n                    <Text paddingRight={16}>\n                      {state.message && state.message}\n                    </Text>\n                    <Icon icon=\"envelope\" color=\"info\" size={40} />\n                  </div>\n                )\n              }\n            </Mutation>\n          </div>\n        </Dialog>\n        {children({\n          setState,\n        })}\n      </Pane>\n    )}\n  </Component>\n)\n\nexport default LogInModal\n\nconst SEND_TOKEN = gql`\n  mutation sendShortLivedToken($email: String!) {\n    sendShortLivedToken(email: $email) {\n      message\n    }\n  }\n`\n","import React from 'react'\nimport {\n  Button,\n  Pane,\n  Text,\n  Heading,\n  Pill,\n  Spinner,\n  Position,\n} from 'evergreen-ui'\nimport MyCart from './cart/MyCart'\nimport LogInModal from './LogInModal'\nimport CreateItemModal from './CreateItemModal'\nimport User from '../user/User'\n// const data = {\n// \tme: false\n// }\n\nconst NavBar = props => {\n  return (\n    <User>\n      {({ data, loading }) => {\n        if (loading) return <Spinner marginX=\"auto\" size={60} />\n        return (\n          <Pane elevation={4} display=\"flex\" padding={16} background=\"#47B881\">\n            <Pane flex={1} alignItems=\"center\" display=\"flex\">\n              <Heading className=\"grow pointer\" color=\"#F9F9FB\" size={600}>\n                E-commerce-demo\n              </Heading>\n            </Pane>\n            <Pane>\n              {data && data.me ? (\n                <>\n                  <Button\n                    color=\"#F9F9FB\"\n                    className=\"grow\"\n                    appearance=\"minimal\"\n                    marginRight={16}\n                  >\n                    Items\n                  </Button>\n                  <CreateItemModal>\n                    {({ openModal }) => (\n                      <Button\n                        color=\"#F9F9FB\"\n                        className=\"grow\"\n                        appearance=\"minimal\"\n                        marginRight={16}\n                        onClick={openModal}\n                      >\n                        Sell\n                      </Button>\n                    )}\n                  </CreateItemModal>\n\n                  <MyCart />\n                </>\n              ) : (\n                <LogInModal>\n                  {({ setState }) => (\n                    <Button\n                      onClick={() => setState({ isShown: true })}\n                      className=\"shadow-4 grow br-pill\"\n                      marginRight={16}\n                    >\n                      Log in\n                    </Button>\n                  )}\n                </LogInModal>\n              )}\n            </Pane>\n          </Pane>\n        )\n      }}\n    </User>\n  )\n}\n\nexport default NavBar\n","import React, { Component } from 'react'\nimport { Button, Pane, Text, Heading, Pill, SearchInput } from 'evergreen-ui'\nimport debounce from 'lodash.debounce'\nimport Downshift, { resetIdCounter } from 'downshift'\nimport { SEARCH_ITEMS_QUERY } from '../../graphql/queries'\nimport { ApolloConsumer } from 'react-apollo'\n\nclass SearchField extends Component {\n\tstate = {\n\t\titems: [],\n\t\tloading: false\n\t}\n\tonChange = debounce(async (e, client) => {\n\t\t// console.log('Searching...')\n\t\t// turn loading on\n\t\tthis.setState({ loading: true })\n\t\t// Manually query apollo client\n\t\tconst res = await client.query({\n\t\t\tquery: SEARCH_ITEMS_QUERY,\n\t\t\tvariables: { searchTerm: e.target.value }\n\t\t})\n\t\tthis.setState({\n\t\t\titems: res.data.items,\n\t\t\tloading: false\n\t\t})\n\t}, 350)\n\trender() {\n\t\tresetIdCounter()\n\t\treturn (\n\t\t\t<div className=\"flex justify-center items-center flex-column mt4 \">\n\t\t\t\t<Downshift itemToString={item => (item === null ? '' : item.title)}>\n\t\t\t\t\t{({ getInputProps, getItemProps, isOpen, inputValue, highlightedIndex }) => (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<ApolloConsumer>\n\t\t\t\t\t\t\t\t{client => (\n\t\t\t\t\t\t\t\t\t<Pane elevation={4}>\n\t\t\t\t\t\t\t\t\t\t<SearchInput\n\t\t\t\t\t\t\t\t\t\t\t{...getInputProps({\n\t\t\t\t\t\t\t\t\t\t\t\ttype: 'search',\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder: 'Search For An Item',\n\t\t\t\t\t\t\t\t\t\t\t\tid: 'search',\n\t\t\t\t\t\t\t\t\t\t\t\tclassName: this.state.loading ? 'loading' : '',\n\t\t\t\t\t\t\t\t\t\t\t\tonChange: e => {\n\t\t\t\t\t\t\t\t\t\t\t\t\te.persist()\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.onChange(e, client)\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\theight={60}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Pane>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</ApolloConsumer>\n\t\t\t\t\t\t\t{isOpen && (\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tclassName=\"w-90 w-50-ns z-1 absolute flex flex-column justify-center items-center\"\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\ttop: 140,\n\t\t\t\t\t\t\t\t\t\tmarginLeft: 'auto',\n\t\t\t\t\t\t\t\t\t\tmarginRight: 'auto',\n\t\t\t\t\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\t\t\t\t\tright: 0\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{this.state.items.map((item, index) => (\n\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t{...getItemProps({ item })}\n\t\t\t\t\t\t\t\t\t\t\tkey={item.id}\n\t\t\t\t\t\t\t\t\t\t\tclassName={` ${index === highlightedIndex &&\n\t\t\t\t\t\t\t\t\t\t\t\t`hover-bg-black hover-white`} shadow-4 flex items-center w-100 pa2 bg-white pointer bg-animate`}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<img src={item.image} className=\"h4\" />\n\t\t\t\t\t\t\t\t\t\t\t<p className=\"pl3\">{item.title}</p>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</Downshift>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default SearchField\n","import React from 'react'\nimport Component from '@reactions/component'\nimport { Dialog, Pane, Text, InlineAlert, Icon, Spinner, toaster } from 'evergreen-ui'\nimport { Mutation, Query, graphql } from 'react-apollo'\nimport { gql } from 'apollo-boost'\nimport { AUTH_TOKEN } from '../../utils/constants'\nimport { ME_QUERY } from '../../graphql/queries'\n\nclass SignUp extends Component {\n\tstate = {\n\t\terror: '',\n\t\tloader: true,\n\t\th: window.innerHeight\n\t}\n\n\tasync componentDidMount() {\n\t\tconst res = await this.props\n\t\t\t.signup({\n\t\t\t\tvariables: { shortLivedToken: this.props.match.params.token },\n\t\t\t\trefetchQueries: [{ query: ME_QUERY }]\n\t\t\t})\n\t\t\t.catch(e => {\n\t\t\t\tthis.setState({ error: e.message, loader: false })\n\t\t\t})\n\t\tif (res) {\n\t\t\tconst token = res.data.signup.token\n\t\t\tlocalStorage.setItem(AUTH_TOKEN, token)\n\t\t\tthis.setState({ loader: false })\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.props.history.push('/')\n\t\t\t\twindow.location.reload()\n\t\t\t}, 3500)\n\t\t}\n\t}\n\n\trender() {\n\t\tif (this.state.loader) return <Spinner marginX=\"auto\" marginY={this.state.h * 0.2} size={60} />\n\n\t\tif (this.state.error) {\n\t\t\ttoaster.warning(`${this.state.error}`)\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.props.history.push('/')\n\t\t\t}, 2000)\n\t\t}\n\t\tif (!this.state.error && !this.state.loader) {\n\t\t\ttoaster.success('Congrats! You are succesfully loged in!', {\n\t\t\t\tduration: 3\n\t\t\t})\n\t\t}\n\t\treturn null\n\t}\n}\n\nconst SIGN_UP = gql`\n\tmutation signup($shortLivedToken: String!){\n\t\tsignup(shortLivedToken: $shortLivedToken){\n\t\t\tuser {\n        id\n        email\n      }\n      token\n\t\t}\n\t}\n`\n\nexport default graphql(SIGN_UP, {\n\tname: 'signup'\n})(SignUp)\n\n// return (\n// <Dialog\n// \ttopOffset={this.state.h * 0.4}\n// \theight={100}\n// \twidth={100}\n// \thasFooter={false}\n// \thasHeader={false}\n// \tisShown={this.state.isShown}\n// \tonCloseComplete={() => this.setState({ isShown: false })}\n// >\n// <Pane display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\n// \t{this.state.loader && <Spinner size={60} />}\n// \t{!this.state.loader &&\n// \t\t!this.state.error && <Icon icon=\"tick-circle\" color=\"success\" size={60} />}\n// </Pane>\n// </Dialog>\n// onCompleted={toaster.success('You are succesfuly loged in!', {\n// \tduration: 5\n// })}\n\n//   < Mutation mutation = { SIGN_UP } variables = {{ shortLivedToken: this.state.shortLivedToken }}>\n//     {(mutation, { data, loading, error }) => {\n//   if (loading)\n//     return (\n//       <Pane\n//         display=\"flex\"\n//         alignItems=\"center\"\n//         // justifyContent=\"center\"\n//         height={400}\n//       >\n//         <Spinner />\n//       </Pane>\n//     )\n//   if (error)\n//     return (\n//       <Pane display=\"flex\" alignItems=\"center\" justifyContent=\"center\" height={400}>\n//         <p>{this.props.match.params.token}</p>\n//         <Text>Error occurred {error.message}</Text>\n//       </Pane>\n//     )\n//   this.handleMutation(mutation)\n//   return null\n// }}\n// \t\t\t</Mutation >\n","export default function(amount) {\r\n  const options = {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n    minimumFractionDigits: 2,\r\n  }\r\n  // if its a whole, dollar amount, leave off the .00\r\n  if (amount % 100 === 0) options.minimumFractionDigits = 0\r\n  const formatter = new Intl.NumberFormat('en-US', options)\r\n  return formatter.format(amount / 100)\r\n}\r\n","import React from 'react'\r\nimport Component from '@reactions/component'\r\nimport {\r\n  Button,\r\n  Pane,\r\n  Text,\r\n  Heading,\r\n  TextInput,\r\n  Icon,\r\n  Dialog,\r\n} from 'evergreen-ui'\r\nimport { Mutation, Query } from 'react-apollo'\r\nimport { ITEM_QUERY } from '../../graphql/queries'\r\nimport formatMoney from '../../utils/formatMoney'\r\n\r\nconst ItemPreview = ({ children, id }) => (\r\n  <Component\r\n    initialState={{\r\n      isShown: false,\r\n    }}\r\n  >\r\n    {({ state, setState }) => (\r\n      <Pane>\r\n        <Dialog\r\n          isShown={state.isShown}\r\n          onCloseComplete={() =>\r\n            setState({\r\n              isShown: false,\r\n            })\r\n          }\r\n          hasFooter={false}\r\n          hasHeader={false}\r\n        >\r\n          <Query\r\n            query={ITEM_QUERY}\r\n            variables={{\r\n              id,\r\n            }}\r\n          >\r\n            {({ error, loading, data }) => {\r\n              if (error) return <p>{error.message}</p>\r\n              if (loading) return <p>Loading...</p>\r\n              if (!data.item) return <p>No Item Found for {id}</p>\r\n              const item = data.item\r\n              return (\r\n                <div>\r\n                  <div className=\"flex justify-center items-center\">\r\n                    <img\r\n                      src={\r\n                        item.largeImage || `https://via.placeholder.com/550x350`\r\n                      }\r\n                    />\r\n                  </div>\r\n                  <div className=\"flex flex-column\">\r\n                    <Heading>{item.title} </Heading>\r\n                    <Text>{item.description} </Text>\r\n                    <Text>{formatMoney(item.price)} </Text>\r\n                  </div>\r\n                </div>\r\n              )\r\n            }}\r\n          </Query>\r\n        </Dialog>\r\n        {children({ setState })}\r\n      </Pane>\r\n    )}\r\n  </Component>\r\n)\r\n\r\nexport default ItemPreview\r\n\r\n// const SEND_TOKEN = gql`\r\n// \tmutation sendShortLivedToken($email: String!){\r\n// \t\tsendShortLivedToken(email: $email){\r\n// \t\t\tmessage\r\n// \t\t}\r\n// \t}\r\n// `\r\n","import React, { Component } from 'react'\nimport {\n  Button,\n  Pane,\n  Text,\n  Heading,\n  Spinner,\n  Icon,\n  Dialog,\n  toaster,\n} from 'evergreen-ui'\nimport { Mutation, Query } from 'react-apollo'\nimport { ADD_TO_CART_MUTATION } from '../../graphql/mutations'\nimport { ME_QUERY } from '../../graphql/queries'\nimport ItemPreview from './ItemPreview'\nimport formatMoney from '../../utils/formatMoney'\n\n// <Pagination page={this.props.page} />\nconst Item = ({ item }) => (\n  <Pane\n    elevation={4}\n    hoverElevation={2}\n    margin={24}\n    background=\"white\"\n    className=\"w-100 w-20-l w-40-m br4 h-100\"\n  >\n    <ItemPreview id={item.id}>\n      {({ setState }) => (\n        <img\n          onClick={() => setState({ isShown: true })}\n          src={item.image}\n          style={{ height: 200 }}\n          className=\"db w-100 br4 br--top pointer\"\n          alt=\"Photo of a kitten looking menacing.\"\n        />\n      )}\n    </ItemPreview>\n\n    <div className=\"flex flex-column ph4 pv3 ph3-ns pv3-ns items-start\">\n      <div className=\"flex justify-between w-100\">\n        <Heading>{item.title}</Heading>\n        <Text>{formatMoney(item.price)}</Text>\n      </div>\n\n      <Text className=\"h3 w-100 flex items-center\">{item.description}</Text>\n      <div className=\"flex justify-around mt2 w-100 bt b--light-gray pt2\">\n        <Mutation\n          mutation={ADD_TO_CART_MUTATION}\n          refetchQueries={[{ query: ME_QUERY }]}\n          variables={{\n            id: item.id,\n          }}\n        >\n          {(mutation, { loading, error }) => (\n            <Icon\n              onClick={mutation}\n              className=\"pointer grow\"\n              icon=\"shopping-cart\"\n              color=\"danger\"\n              size={24}\n            />\n          )}\n        </Mutation>\n      </div>\n    </div>\n  </Pane>\n)\n\n// <Pagination page={this.props.page} />\n// <article class=\"br2 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw5 center\">\n\nexport default Item\n","import React, { Component } from 'react'\nimport { Query } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport {\n  Button,\n  Pane,\n  Text,\n  Heading,\n  Spinner,\n  Icon,\n  Dialog,\n  toaster,\n} from 'evergreen-ui'\nimport Item from './Item'\nimport { ALL_ITEMS_QUERY } from '../../graphql/queries'\n\nclass ItemList extends Component {\n  fetchMoreData = (fetchMore, data) => {\n    fetchMore({\n      variables: {\n        after: data.itemsConnection.pageInfo.endCursor,\n      },\n      updateQuery: (prev, { fetchMoreResult }) => {\n        if (!fetchMoreResult) return prev\n        return {\n          itemsConnection: {\n            __typename: 'ItemConnection',\n            pageInfo: fetchMoreResult.itemsConnection.pageInfo,\n            edges: [\n              ...prev.itemsConnection.edges,\n              ...fetchMoreResult.itemsConnection.edges,\n            ],\n          },\n        }\n      },\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <Query\n          query={ALL_ITEMS_QUERY}\n          notifyOnNetworkStatusChange={true}\n          fetchPolicy=\"cache-and-network\"\n          // fetchPolicy=\"network-only\"\n        >\n          {({ data, error, loading, fetchMore }) => {\n            if (error)\n              return (\n                <Heading className=\"flex justify-center pa4\">\n                  Some error occoure\n                </Heading>\n              )\n            window.onscroll = () => {\n              const { hasNextPage } = data.itemsConnection.pageInfo\n\n              if (\n                window.innerHeight + document.documentElement.scrollTop ===\n                  document.documentElement.offsetHeight &&\n                hasNextPage\n              ) {\n                // Do awesome stuff like loading more content!\n                this.fetchMoreData(fetchMore, data)\n              }\n            }\n            return (\n              <>\n                <div className=\"flex flex-wrap justify-center mv4\">\n                  {data.itemsConnection &&\n                    data.itemsConnection.edges.map(item => (\n                      <Item item={item.node} key={item.node.id} />\n                    ))}\n                </div>\n                {loading && <Spinner marginY={60} marginX=\"auto\" size={60} />}\n              </>\n            )\n          }}\n        </Query>\n      </div>\n    )\n  }\n}\n\nexport default ItemList\n\n// const ALL_ITEMS_QUERY = gql`\n//   query items {\n//     items(orderBy: createdAt_DESC) {\n//       id\n//       title\n//       price\n//       description\n//       image\n//       largeImage\n//     }\n//   }\n\n// const ALL_ITEMS_QUERY = gql`\n//   query ALL_ITEMS_QUERY($skip: Int = 0, $first: Int = ${perPage}) {\n//     items(first: $first, skip: $skip, orderBy: createdAt_DESC) {\n//       id\n//       title\n//       price\n//       description\n//       image\n//       largeImage\n//     }\n//   }\n// `\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {\n  NavLink,\n  Link,\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from 'react-router-dom'\nimport { ApolloProvider } from 'react-apollo'\nimport client from './client'\nimport NavBar from './components/navigation/NavBar'\nimport SearchField from './components/search/SearchField'\nimport SignUp from './components/navigation/SignUp'\nimport ItemList from './components/item/ItemList'\nimport ModalConductor from './components/modal/ModalConductor'\n\n// import TestModal from './components/TestModal'\n\nimport { Button, Pane, Text, Heading } from 'evergreen-ui'\nimport './styles.css'\nimport 'tachyons'\n\n// <ModalConductor />\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <>\n          <NavBar />\n          <SearchField />\n          <Switch>\n            <Route exact path=\"/\" component={ItemList} />\n            <Route exact path=\"/token/:token\" component={SignUp} />\n          </Switch>\n        </>\n      </Router>\n    </div>\n  )\n}\n\nconst rootElement = document.getElementById('root')\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  rootElement,\n)\n"],"sourceRoot":""}